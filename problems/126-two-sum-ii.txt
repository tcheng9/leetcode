My solution:
1. Given that it's a sorted array, you can use 2 pointers.
2. If l + r > target THEN r -= 1 
3. IF l + r < target THEN l -= 1


Conceptual solution:
Brute force:
1. Double for loops O(n^2)


Solution:
class Solution:
    def twoSum(self, numbers: List[int], target: int) -> List[int]:
        l = 0
        r = len(numbers) - 1

        while l < r:
            sum = numbers[l] + numbers[r]
            if (sum > target):
                r -= 1
            elif (sum < target):
                l += 1
            else:
                return [l+1, r+1]



Thoughts:
1. I need to analyze return output better.
    -> In this case, I thought return indices were 0 indexed but they were 1 indexed.

2. This solution is simple so I kinda memorized it/know it already